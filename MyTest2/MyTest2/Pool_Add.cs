///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyTest2
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Pool_Add recording.
    /// </summary>
    [TestModule("b372db19-f499-4dc1-8c6a-37c825e284b3", ModuleType.Recording, 1)]
    public partial class Pool_Add : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyTest2Repository repository.
        /// </summary>
        public static MyTest2Repository repo = MyTest2Repository.Instance;

        static Pool_Add instance = new Pool_Add();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Pool_Add()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Pool_Add Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable DeviceNamevar.
        /// </summary>
        [TestVariable("082a54eb-1d1a-4bb0-b90f-6f2e64b40f00")]
        public string DeviceNamevar
        {
            get { return repo.DeviceNamevar; }
            set { repo.DeviceNamevar = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Product_Overview.ProfileBottom' at Center", repo.Product_Overview.ProfileBottomInfo, new RecordItemIndex(0));
            repo.Product_Overview.ProfileBottom.Touch();
            Delay.Milliseconds(300);
            
            //Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.HeaderRightImage' at Center", repo.ComPentairPentairhome.HeaderRightImageInfo, new RecordItemIndex(1));
            //repo.ComPentairPentairhome.HeaderRightImage.Touch();
            //Delay.Milliseconds(300);
            
            //Report.Log(ReportLevel.Info, "Touch", "Touch item 'Product_Overview.ProductOverviewclick' at Center", repo.Product_Overview.ProductOverviewclickInfo, new RecordItemIndex(2));
            //repo.Product_Overview.ProductOverviewclick.Touch();
            //Delay.Milliseconds(300);
            
            //Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.Address' at Center", repo.Pool_Add.AddressInfo, new RecordItemIndex(3));
            //repo.Pool_Add.Address.Touch();
            //Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(4));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.PoolInfoProfile' at Center", repo.Pool_Add.PoolInfoProfileInfo, new RecordItemIndex(5));
            repo.Pool_Add.PoolInfoProfile.Touch();
            Delay.Milliseconds(300);
            
            //Report.Log(ReportLevel.Info, "Touch gestures", "Swipe gesture with direction 'Up (270°)' starting from 'Center' with distance '250' with swipe duration'800ms' and step count '0' on item 'Pool_Add.SelectPool'.", repo.Pool_Add.SelectPoolInfo, new RecordItemIndex(6));
            //repo.Pool_Add.SelectPool.Swipe(Location.Center, ValueConverter.ArgumentFromString<Ranorex.Core.Recorder.Touch.GestureDirection>("SwipeDirection", "Up (270°)"), ValueConverter.ArgumentFromString<Ranorex.Core.Distance>("Distance", "250"), ValueConverter.ArgumentFromString<Ranorex.Duration>("SwipeDuration", "800ms"), 0);
            //Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.ADDANEWPOOL' at Center", repo.Pool_Add.ADDANEWPOOLInfo, new RecordItemIndex(7));
            repo.Pool_Add.ADDANEWPOOL.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.Outdoor' at Center", repo.Pool_Add.OutdoorInfo, new RecordItemIndex(8));
            repo.Pool_Add.Outdoor.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to 'OutdoorPool_Automation' on item 'Pool_Add.PoolName'.", repo.Pool_Add.PoolNameInfo, new RecordItemIndex(9));
            repo.Pool_Add.PoolName.Element.SetAttributeValue("Text", "OutdoorPool_Automation");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch gestures", "Swipe gesture with direction 'Up (270°)' starting from 'Center' with distance '250' with swipe duration'500ms' and step count '0' on item 'Pool_Add.PoolName'.", repo.Pool_Add.PoolNameInfo, new RecordItemIndex(10));
            repo.Pool_Add.PoolName.Swipe(Location.Center, ValueConverter.ArgumentFromString<Ranorex.Core.Recorder.Touch.GestureDirection>("SwipeDirection", "Up (270°)"), ValueConverter.ArgumentFromString<Ranorex.Core.Distance>("Distance", "250"), ValueConverter.ArgumentFromString<Ranorex.Duration>("SwipeDuration", "500ms"), 0);
            Delay.Milliseconds(500);
            
            //Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.Label_Pool_volume' at Center", repo.Pool_Add.Label_Pool_volumeInfo, new RecordItemIndex(11));
            //repo.Pool_Add.Label_Pool_volume.Touch();
            //Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '6000' on item 'Pool_Add.Volume'.", repo.Pool_Add.VolumeInfo, new RecordItemIndex(12));
            repo.Pool_Add.Volume.Element.SetAttributeValue("Text", "6000");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.Label_Pool_volume' at Center", repo.Pool_Add.Label_Pool_volumeInfo, new RecordItemIndex(13));
            repo.Pool_Add.Label_Pool_volume.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Touch gestures", "Swipe gesture with direction 'Up (270°)' starting from 'Center' with distance '250' with swipe duration'500ms' and step count '0' on item 'Pool_Add.Label_Pool_volume'.", repo.Pool_Add.Label_Pool_volumeInfo, new RecordItemIndex(14));
            repo.Pool_Add.Label_Pool_volume.Swipe(Location.Center, ValueConverter.ArgumentFromString<Ranorex.Core.Recorder.Touch.GestureDirection>("SwipeDirection", "Up (270°)"), ValueConverter.ArgumentFromString<Ranorex.Core.Distance>("Distance", "250"), ValueConverter.ArgumentFromString<Ranorex.Duration>("SwipeDuration", "500ms"), 0);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(15));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.SelectAddress' at Center", repo.Pool_Add.SelectAddressInfo, new RecordItemIndex(16));
            repo.Pool_Add.SelectAddress.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(17));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.Container53diamondcourtBurllingame' at Center", repo.Pool_Add.Container53diamondcourtBurllingameInfo, new RecordItemIndex(18));
            repo.Pool_Add.Container53diamondcourtBurllingame.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(19));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.PoolSave' at CenterRight", repo.Pool_Add.PoolSaveInfo, new RecordItemIndex(20));
            repo.Pool_Add.PoolSave.Touch(Location.CenterRight);
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(21));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.ADDANEWPOOL' at Center", repo.Pool_Add.ADDANEWPOOLInfo, new RecordItemIndex(22));
            repo.Pool_Add.ADDANEWPOOL.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.IndoorPool' at Center", repo.Pool_Add.IndoorPoolInfo, new RecordItemIndex(23));
            repo.Pool_Add.IndoorPool.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to 'IndoorPool_Automation' on item 'Pool_Add.PoolName'.", repo.Pool_Add.PoolNameInfo, new RecordItemIndex(24));
            repo.Pool_Add.PoolName.Element.SetAttributeValue("Text", "IndoorPool_Automation");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch gestures", "Swipe gesture with direction 'Up (270°)' starting from 'Center' with distance '250' with swipe duration'500ms' and step count '0' on item 'Pool_Add.PoolName'.", repo.Pool_Add.PoolNameInfo, new RecordItemIndex(25));
            repo.Pool_Add.PoolName.Swipe(Location.Center, ValueConverter.ArgumentFromString<Ranorex.Core.Recorder.Touch.GestureDirection>("SwipeDirection", "Up (270°)"), ValueConverter.ArgumentFromString<Ranorex.Core.Distance>("Distance", "250"), ValueConverter.ArgumentFromString<Ranorex.Duration>("SwipeDuration", "500ms"), 0);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '3000' on item 'Pool_Add.Volume'.", repo.Pool_Add.VolumeInfo, new RecordItemIndex(26));
            repo.Pool_Add.Volume.Element.SetAttributeValue("Text", "3000");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.Label_Pool_volume' at Center", repo.Pool_Add.Label_Pool_volumeInfo, new RecordItemIndex(27));
            repo.Pool_Add.Label_Pool_volume.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Touch gestures", "Swipe gesture with direction 'Up (270°)' starting from 'Center' with distance '250' with swipe duration'500ms' and step count '0' on item 'Pool_Add.Label_Pool_volume'.", repo.Pool_Add.Label_Pool_volumeInfo, new RecordItemIndex(28));
            repo.Pool_Add.Label_Pool_volume.Swipe(Location.Center, ValueConverter.ArgumentFromString<Ranorex.Core.Recorder.Touch.GestureDirection>("SwipeDirection", "Up (270°)"), ValueConverter.ArgumentFromString<Ranorex.Core.Distance>("Distance", "250"), ValueConverter.ArgumentFromString<Ranorex.Duration>("SwipeDuration", "500ms"), 0);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(29));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.SelectAddress' at Center", repo.Pool_Add.SelectAddressInfo, new RecordItemIndex(30));
            repo.Pool_Add.SelectAddress.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(31));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.Container53diamondcourtBurllingame' at Center", repo.Pool_Add.Container53diamondcourtBurllingameInfo, new RecordItemIndex(32));
            repo.Pool_Add.Container53diamondcourtBurllingame.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(33));
            Delay.Duration(3000, false);
            
            //Report.Log(ReportLevel.Info, "Touch gestures", "Swipe gesture with direction 'Up (270°)' starting from 'Center' with distance '250' with swipe duration'500ms' and step count '0' on item 'Pool_Add.Volume'.", repo.Pool_Add.VolumeInfo, new RecordItemIndex(34));
            //repo.Pool_Add.Volume.Swipe(Location.Center, ValueConverter.ArgumentFromString<Ranorex.Core.Recorder.Touch.GestureDirection>("SwipeDirection", "Up (270°)"), ValueConverter.ArgumentFromString<Ranorex.Core.Distance>("Distance", "250"), ValueConverter.ArgumentFromString<Ranorex.Duration>("SwipeDuration", "500ms"), 0);
            //Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.PoolSave' at CenterRight", repo.Pool_Add.PoolSaveInfo, new RecordItemIndex(35));
            repo.Pool_Add.PoolSave.Touch(Location.CenterRight);
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(36));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.Pool_Add.Screenshot_Pool_Add, false, new RecordItemIndex(37));
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Product_Overview.HomeButton' at Center", repo.Product_Overview.HomeButtonInfo, new RecordItemIndex(38));
            repo.Product_Overview.HomeButton.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.AssetsSrcCommonFeatureImagesHomeAle' at Center", repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesHomeAleInfo, new RecordItemIndex(39));
            repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesHomeAle.Touch();
            Delay.Milliseconds(300);
            
            //Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.DeviceName' at Center", repo.ComPentairPentairhome.DeviceNameInfo, new RecordItemIndex(40));
            //repo.ComPentairPentairhome.DeviceName.Touch();
            //Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(41));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.Pool_device_Address' at Center", repo.ComPentairPentairhome.Pool_device_AddressInfo, new RecordItemIndex(42));
            repo.ComPentairPentairhome.Pool_device_Address.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(43));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.AssetsSrcCommonFeatureImagesGearAt2' at Center", repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesGearAt2Info, new RecordItemIndex(44));
            repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesGearAt2.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Product_Overview.ProductOverviewclick' at Center", repo.Product_Overview.ProductOverviewclickInfo, new RecordItemIndex(45));
            repo.Product_Overview.ProductOverviewclick.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Touch gestures", "Swipe gesture with direction 'Up (270°)' starting from 'Center' with distance '100' with swipe duration'500ms' and step count '0' on item 'Product_Overview.Nickname'.", repo.Product_Overview.NicknameInfo, new RecordItemIndex(46));
            repo.Product_Overview.Nickname.Swipe(Location.Center, ValueConverter.ArgumentFromString<Ranorex.Core.Recorder.Touch.GestureDirection>("SwipeDirection", "Up (270°)"), ValueConverter.ArgumentFromString<Ranorex.Core.Distance>("Distance", "100"), ValueConverter.ArgumentFromString<Ranorex.Duration>("SwipeDuration", "500ms"), 0);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.Address' at Center", repo.Pool_Add.AddressInfo, new RecordItemIndex(47));
            repo.Pool_Add.Address.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(48));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.OutdoorPoolAutomation' at Center", repo.Pool_Add.OutdoorPoolAutomationInfo, new RecordItemIndex(49));
            repo.Pool_Add.OutdoorPoolAutomation.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 30s.", new RecordItemIndex(50));
            Delay.Duration(30000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Pool_Add.DeviceAddressUpdated'.", repo.Pool_Add.DeviceAddressUpdatedInfo, new RecordItemIndex(51));
            Validate.AttributeEqual(repo.Pool_Add.DeviceAddressUpdatedInfo, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Pool_Add.TextOK' at Center", repo.Pool_Add.TextOKInfo, new RecordItemIndex(52));
            repo.Pool_Add.TextOK.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'Pool_Add.HomeIcon_without_red' at Center", repo.Pool_Add.HomeIcon_without_redInfo, new RecordItemIndex(53));
                repo.Pool_Add.HomeIcon_without_red.Touch();
                Delay.Milliseconds(300);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(53)); }
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComPentairPentairhome.AssetsSrcCommonFeatureImagesHomeAle' at Center", repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesHomeAleInfo, new RecordItemIndex(54));
                repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesHomeAle.Touch();
                Delay.Milliseconds(300);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(54)); }
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(55));
            Delay.Duration(2000, false);
            
            //Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.DeviceName' at Center", repo.ComPentairPentairhome.DeviceNameInfo, new RecordItemIndex(56));
            //repo.ComPentairPentairhome.DeviceName.Touch();
            //Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.Pool_device_Address' at Center", repo.ComPentairPentairhome.Pool_device_AddressInfo, new RecordItemIndex(57));
            repo.ComPentairPentairhome.Pool_device_Address.Touch();
            Delay.Milliseconds(300);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
