///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyTest2
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Home_Dashboard recording.
    /// </summary>
    [TestModule("9347a5af-d853-452d-bb8c-f8f32d8cfa8e", ModuleType.Recording, 1)]
    public partial class Home_Dashboard : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyTest2Repository repository.
        /// </summary>
        public static MyTest2Repository repo = MyTest2Repository.Instance;

        static Home_Dashboard instance = new Home_Dashboard();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Home_Dashboard()
        {
            DeviceNamevar = "chemcheck150A1";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Home_Dashboard Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable DeviceNamevar.
        /// </summary>
        [TestVariable("082a54eb-1d1a-4bb0-b90f-6f2e64b40f00")]
        public string DeviceNamevar
        {
            get { return repo.DeviceNamevar; }
            set { repo.DeviceNamevar = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // Alert icon successfully verified
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nAlert icon successfully verified\r\nValidating AttributeEqual (Visible='True') on item 'ComPentairPentairhome.AssetsSrcCommonFeatureImagesNotific'.", repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesNotificInfo, new RecordItemIndex(0));
                Validate.AttributeEqual(repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesNotificInfo, "Visible", "True", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Info});
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(0)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Visible='True') on item 'ComPentairPentairhome.Bell_Alert'.", repo.ComPentairPentairhome.Bell_AlertInfo, new RecordItemIndex(1));
                Validate.AttributeEqual(repo.ComPentairPentairhome.Bell_AlertInfo, "Visible", "True", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Info});
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(1)); }
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'ComPentairPentairhome.AssetsSrcCommonFeatureImagesGearAt2'.", repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesGearAt2Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesGearAt2Info, "Visible", "True", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Info});
            Delay.Milliseconds(0);
            
            // Problem Detected Section Sucessfullt verified
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nProblem Detected Section Sucessfullt verified\r\nValidating AttributeEqual (Visible='True') on item 'ComPentairPentairhome.ProblemDetected'.", repo.ComPentairPentairhome.ProblemDetectedInfo, new RecordItemIndex(3));
                Validate.AttributeEqual(repo.ComPentairPentairhome.ProblemDetectedInfo, "Visible", "True", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Info});
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(3)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Visible='True') on item 'ComPentairPentairhome.EverythingOK'.", repo.ComPentairPentairhome.EverythingOKInfo, new RecordItemIndex(4));
                Validate.AttributeEqual(repo.ComPentairPentairhome.EverythingOKInfo, "Visible", "True", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Info});
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.ComPentairPentairhome.HomeDashboard, false, new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.AssetsSrcCommonFeatureImagesGearAt2' at Center", repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesGearAt2Info, new RecordItemIndex(6));
            repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesGearAt2.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(7));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.Dashboard_DeviceName' at Center", repo.ComPentairPentairhome.Dashboard_DeviceNameInfo, new RecordItemIndex(8));
            repo.ComPentairPentairhome.Dashboard_DeviceName.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Edit_Dashboard.SaveEditDashboard' at Center", repo.Edit_Dashboard.SaveEditDashboardInfo, new RecordItemIndex(9));
            repo.Edit_Dashboard.SaveEditDashboard.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(10));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.Edit_Dashboard.Without_Chemcheck_Screenshot, false, new RecordItemIndex(11));
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeNotEqual (Visible!=$DeviceNamevar) on item 'ComPentairPentairhome.DeviceName'.", repo.ComPentairPentairhome.DeviceNameInfo, new RecordItemIndex(12));
            //Validate.AttributeNotEqual(repo.ComPentairPentairhome.DeviceNameInfo, "Visible", DeviceNamevar);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.AssetsSrcCommonFeatureImagesGearAt2' at Center", repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesGearAt2Info, new RecordItemIndex(13));
            repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesGearAt2.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(14));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.Dashboard_DeviceName' at Center", repo.ComPentairPentairhome.Dashboard_DeviceNameInfo, new RecordItemIndex(15));
            repo.ComPentairPentairhome.Dashboard_DeviceName.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'Edit_Dashboard.SaveEditDashboard' at Center", repo.Edit_Dashboard.SaveEditDashboardInfo, new RecordItemIndex(16));
            repo.Edit_Dashboard.SaveEditDashboard.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(17));
            Delay.Duration(2000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "Device WQM", repo.ComPentairPentairhome.DeviceName, false, new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.DeviceName' at Center", repo.ComPentairPentairhome.DeviceNameInfo, new RecordItemIndex(19));
            repo.ComPentairPentairhome.DeviceName.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(20));
            Delay.Duration(3000, false);
            
            //Report.Log(ReportLevel.Info, "Invoke action", "Invoking Touch() on item 'ComPentairPentairhome.Dashboard_DeviceName'.", repo.ComPentairPentairhome.Dashboard_DeviceNameInfo, new RecordItemIndex(21));
            //repo.ComPentairPentairhome.Dashboard_DeviceName.Element.InvokeActionWithText("Touch");
            //Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
